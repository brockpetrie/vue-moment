{"version":3,"file":"vue-moment.min.js","sources":["../src/core/momentFilter.js","../src/core/durationFilter.js","../src/vue-moment.js"],"sourcesContent":["const momentFilter = (args, moment) => {\n  args = Array.prototype.slice.call(args);\n  const input = args.shift();\n  let date;\n\n  if (Array.isArray(input) && typeof input[0] === 'string') {\n    // If input is array, assume we're being passed a format pattern to parse against.\n    // Format pattern will accept an array of potential formats to parse against.\n    // Date string should be at [0], format pattern(s) should be at [1]\n    date = moment(input[0], input[1], true);\n  } else if (typeof input === 'number') {\n    if (input.toString().length < 12) {\n      // If input is an integer with fewer than 12 digits, assume Unix seconds...\n      date = moment.unix(input);\n    } else {\n      // ..otherwise, assume milliseconds.\n      date = moment(input);\n    }\n  } else {\n    // Otherwise, throw the input at moment and see what happens...\n    date = moment(input);\n  }\n\n  if (!input || !date.isValid()) {\n    // Log a warning if moment couldn't reconcile the input. Better than throwing an error?\n    console.warn('Could not build a valid `moment` object from input.');\n    return input;\n  }\n\n  function parse(...args) {\n    args = Array.prototype.slice.call(args);\n    const method = args.shift();\n\n    switch (method) {\n      case 'add': {\n        /*\n         * Mutates the original moment by adding time.\n         * http://momentjs.com/docs/#/manipulating/add/\n         */\n\n        const addends = args.shift()\n          .split(',')\n          .map(Function.prototype.call, String.prototype.trim);\n        const obj = {};\n\n        for (let n = 0; n < addends.length; n++) {\n          const addend = addends[n].split(' ');\n          obj[addend[1]] = addend[0];\n        }\n        date.add(obj);\n        break;\n      }\n\n      case 'subtract': {\n        /*\n         * Mutates the original moment by subtracting time.\n         * http://momentjs.com/docs/#/manipulating/subtract/\n         */\n\n        const subtrahends = args.shift()\n          .split(',')\n          .map(Function.prototype.call, String.prototype.trim);\n        const obj = {};\n\n        for (let n = 0; n < subtrahends.length; n++) {\n          const subtrahend = subtrahends[n].split(' ');\n          obj[subtrahend[1]] = subtrahend[0];\n        }\n        date.subtract(obj);\n        break;\n      }\n\n      case 'from': {\n        /*\n         * Display a moment in relative time, either from now or from a specified date.\n         * http://momentjs.com/docs/#/displaying/fromnow/\n         */\n\n        let from = 'now';\n        let removeSuffix = false;\n\n        if (args[0] === 'now') args.shift();\n        // If valid, assume it is a date we want the output computed against.\n        if (moment(args[0]).isValid()) from = moment(args.shift());\n\n        if (args[0] === true) {\n          args.shift();\n          removeSuffix = true;\n        }\n\n        if (from !== 'now') {\n          date = date.from(from, removeSuffix);\n        } else {\n          date = date.fromNow(removeSuffix);\n        }\n        break;\n      }\n\n      case 'diff': {\n        /*\n         * Mutates the original moment by doing a difference with another date.\n         * http://momentjs.com/docs/#/displaying/difference/\n         */\n\n        let referenceTime = moment();\n        let units = '';\n        let float = false;\n\n        if (moment(args[0]).isValid()) {\n          // If valid, assume it is a date we want the output computed against.\n          referenceTime = moment(args.shift());\n        } else if (args[0] === null || args[0] === 'now') {\n          // If null or 'now', remove argument and proceed with default referenceTime.\n          args.shift();\n        }\n\n        if (args[0]) units = args.shift();\n\n        if (args[0] === true) float = args.shift();\n\n        date = date.diff(referenceTime, units, float);\n        break;\n      }\n\n      case 'calendar': {\n        /*\n         * Formats a date with different strings depending on how close\n         * to a certain date (today by default) the date is.\n         * http://momentjs.com/docs/#/displaying/calendar-time/\n         */\n\n        let referenceTime = moment();\n        let formats = {};\n\n        if (moment(args[0]).isValid()) {\n          // If valid, assume it is a date we want the output computed against.\n          referenceTime = moment(args.shift());\n        } else if (args[0] === null || args[0] === 'now') {\n          // If null or 'now', remove argument and proceed with default referenceTime.\n          args.shift();\n        }\n\n        if (typeof args[0] === 'object') formats = args.shift();\n\n        date = date.calendar(referenceTime, formats);\n        break;\n      }\n\n      case 'utc': {\n        /*\n         * Mutates the original moment by converting to UTC\n         * https://momentjs.com/docs/#/manipulating/utc/\n         */\n        date.utc();\n        break;\n      }\n\n      case 'timezone': {\n        /*\n         * Mutates the original moment by converting to a new timezone.\n         * https://momentjs.com/timezone/docs/#/using-timezones/converting-to-zone/\n         */\n        date.tz(args.shift());\n        break;\n      }\n\n      default: {\n        /*\n         * Formats a date by taking a string of tokens and replacing\n         * them with their corresponding values.\n         * http://momentjs.com/docs/#/displaying/format/\n         */\n\n        const format = method;\n        date = date.format(format);\n      }\n    }\n\n    if (args.length) parse.apply(parse, args);\n  }\n\n  parse.apply(parse, args);\n\n  return date;\n}\n\nexport default momentFilter;\n","const duration = (args, moment) => {\n  /*\n   * Basic pass-through filter for leveraging moment.js's ability\n   * to manipulate and display durations.\n   * https://momentjs.com/docs/#/durations/\n   */\n  args = Array.prototype.slice.call(args);\n  const input = args.shift();\n  const method = args.shift();\n\n  function createDuration(time) {\n    if (!Array.isArray(time)) time = [time];\n    const result = moment.duration(...time);\n    if (!result.isValid()) console.warn('Could not build a valid `duration` object from input.');\n    return result;\n  }\n\n  let duration = createDuration(input);\n\n  if (method === 'add' || method === 'subtract') {\n    // Generates a duration object and either adds or subtracts it\n    // from our original duration.\n    const durationChange = createDuration(args);\n    duration[method](durationChange);\n  } else if (duration && duration[method]) {\n    // This gives a full proxy to moment.duration functions.\n    duration = duration[method](...args);\n  }\n\n  return duration;\n};\n\nexport default duration;\n","import momentFilter from './core/momentFilter';\nimport durationFilter from './core/durationFilter';\n\nmodule.exports = {\n  install(App, options) {\n    const moment = options && options.moment ? options.moment : require('moment');\n\n    if (parseInt(App.version, 1) >= 3) {\n      App.config.globalProperties.$moment = {\n        get() {\n          return moment;\n        },\n      };\n\n      App.config.globalProperties.$filters = {\n        moment: (...args) => momentFilter(args, moment),\n        duration: (...args) => durationFilter(args, moment),\n      };\n    } else {\n      Object.defineProperties(App.prototype, {\n        $moment: {\n          get() {\n            return moment;\n          },\n        },\n      });\n\n      App.filter('moment', (...args) => momentFilter(args, moment));\n      App.filter('duration', (...args) => durationFilter(args, moment));\n    }\n\n    App.moment = moment;\n  },\n};\n"],"names":["momentFilter","args","moment","input","Array","prototype","slice","call","shift","date","isArray","toString","length","unix","isValid","warn","parse","method","addends","split","map","Function","String","trim","obj","n","addend","add","subtrahends","subtrahend","subtract","from","removeSuffix","fromNow","referenceTime","units","float","diff","formats","_typeof","calendar","utc","tz","format","apply","duration","createDuration","time","result","console","durationChange","module","exports","App","options","require","parseInt","version","config","globalProperties","$moment","$filters","durationFilter","defineProperties","filter"],"mappings":"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"}